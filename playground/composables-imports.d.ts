/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const EffectScope: typeof import('vue')['EffectScope']
  const PDF: typeof import('@teranes/vue-composables')['PDF']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const effectScope: typeof import('vue')['effectScope']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useBlobDownload: typeof import('@teranes/vue-composables')['blobDownload']
  const useCall: typeof import('@teranes/vue-composables')['call']
  const useCloneDeep: typeof import('@teranes/vue-composables')['cloneDeep']
  const useCoalesce: typeof import('@teranes/vue-composables')['coalesce']
  const useCoalesceTruthy: typeof import('@teranes/vue-composables')['coalesceTruthy']
  const useCompare: typeof import('@teranes/vue-composables')['compare']
  const useCompareArray: typeof import('@teranes/vue-composables')['compareArray']
  const useCompareObject: typeof import('@teranes/vue-composables')['compareObject']
  const useCompareType: typeof import('@teranes/vue-composables')['compareType']
  const useComponentToHtml: typeof import('@teranes/vue-composables')['componentToHtml']
  const useComponentToImage: typeof import('@teranes/vue-composables')['componentToImage']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useCsvReader: typeof import('@teranes/vue-composables')['csvReader']
  const useDate: typeof import('@teranes/vue-composables')['date']
  const useDebounce: typeof import('@teranes/vue-composables')['debounce']
  const useDraggable: typeof import('@teranes/vue-composables')['draggable']
  const useEventListener: typeof import('@teranes/vue-composables')['eventListener']
  const useExecuteInBatches: typeof import('@teranes/vue-composables')['executeInBatches']
  const useExtractStyles: typeof import('@teranes/vue-composables')['extractStyles']
  const useFilter: typeof import('@teranes/vue-composables')['filter']
  const useFilterAndPaginate: typeof import('@teranes/vue-composables')['filterAndPaginate']
  const useGetAccessedProps: typeof import('@teranes/vue-composables')['getAccessedProps']
  const useGetBackgroundColor: typeof import('@teranes/vue-composables')['getBackgroundColor']
  const useGetFromStorage: typeof import('@teranes/vue-composables')['getFromStorage']
  const useGetGlobalOptions: typeof import('@teranes/vue-composables')['getGlobalOptions']
  const useGetHexColorShade: typeof import('@teranes/vue-composables')['getHexColorShade']
  const useGetImageProperties: typeof import('@teranes/vue-composables')['getImageProperties']
  const useGetParameters: typeof import('@teranes/vue-composables')['getParameters']
  const useGetTag: typeof import('@teranes/vue-composables')['getTag']
  const useGetUniqueId: typeof import('@teranes/vue-composables')['getUniqueId']
  const useGetValueByObjectPath: typeof import('@teranes/vue-composables')['getValueByObjectPath']
  const useHexToFilter: typeof import('@teranes/vue-composables')['hexToFilter']
  const useHexToHsl: typeof import('@teranes/vue-composables')['hexToHsl']
  const useHexToRgb: typeof import('@teranes/vue-composables')['hexToRgb']
  const useHslToFilter: typeof import('@teranes/vue-composables')['hslToFilter']
  const useHslToHex: typeof import('@teranes/vue-composables')['hslToHex']
  const useHtmlToImage: typeof import('@teranes/vue-composables')['htmlToImage']
  const useImageToDataUrl: typeof import('@teranes/vue-composables')['imageToDataUrl']
  const useInfiniteScroll: typeof import('@teranes/vue-composables')['infiniteScroll']
  const useIsArray: typeof import('@teranes/vue-composables')['isArray']
  const useIsAsyncFunction: typeof import('@teranes/vue-composables')['isAsyncFunction']
  const useIsEventInsideElement: typeof import('@teranes/vue-composables')['isEventInsideElement']
  const useIsFunction: typeof import('@teranes/vue-composables')['isFunction']
  const useIsNullOrEmptyArray: typeof import('@teranes/vue-composables')['isNullOrEmptyArray']
  const useIsNullOrEmptyObject: typeof import('@teranes/vue-composables')['isNullOrEmptyObject']
  const useIsNullOrEmptyString: typeof import('@teranes/vue-composables')['isNullOrEmptyString']
  const useIsNumber: typeof import('@teranes/vue-composables')['isNumber']
  const useIsObject: typeof import('@teranes/vue-composables')['isObject']
  const useIsPlural: typeof import('@teranes/vue-composables')['isPlural']
  const useIsRegex: typeof import('@teranes/vue-composables')['isRegex']
  const useIsSingular: typeof import('@teranes/vue-composables')['isSingular']
  const useIsString: typeof import('@teranes/vue-composables')['isString']
  const useIsTag: typeof import('@teranes/vue-composables')['isTag']
  const useIsValidDate: typeof import('@teranes/vue-composables')['isValidDate']
  const useJsonStringFormatter: typeof import('@teranes/vue-composables')['jsonStringFormatter']
  const useJsonToCsv: typeof import('@teranes/vue-composables')['jsonToCsv']
  const useJsonToCsvExport: typeof import('@teranes/vue-composables')['jsonToCsvExport']
  const useLink: typeof import('vue-router')['useLink']
  const useMapKey: typeof import('@teranes/vue-composables')['mapKey']
  const useMapValue: typeof import('@teranes/vue-composables')['mapValue']
  const useMapper: typeof import('@teranes/vue-composables')['mapper']
  const useObjectAssign: typeof import('@teranes/vue-composables')['objectAssign']
  const usePaginate: typeof import('@teranes/vue-composables')['paginate']
  const usePagination: typeof import('@teranes/vue-composables')['pagination']
  const usePdfAddComponent: typeof import('@teranes/vue-composables')['pdfAddComponent']
  const usePdfAddHtml: typeof import('@teranes/vue-composables')['pdfAddHtml']
  const usePdfAddImage: typeof import('@teranes/vue-composables')['pdfAddImage']
  const usePdfAddTable: typeof import('@teranes/vue-composables')['pdfAddTable']
  const usePdfAddText: typeof import('@teranes/vue-composables')['pdfAddText']
  const usePdfAddWatermark: typeof import('@teranes/vue-composables')['pdfAddWatermark']
  const usePopper: typeof import('@teranes/vue-composables')['popper']
  const useReplaceStringTemplates: typeof import('@teranes/vue-composables')['replaceStringTemplates']
  const useRound: typeof import('@teranes/vue-composables')['round']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSetToStorage: typeof import('@teranes/vue-composables')['setToStorage']
  const useSetValueByObjectPath: typeof import('@teranes/vue-composables')['setValueByObjectPath']
  const useSleep: typeof import('@teranes/vue-composables')['sleep']
  const useSlots: typeof import('vue')['useSlots']
  const useThrottle: typeof import('@teranes/vue-composables')['throttle']
  const useToCamelCase: typeof import('@teranes/vue-composables')['toCamelCase']
  const useToCamelCaseJson: typeof import('@teranes/vue-composables')['toCamelCaseJson']
  const useToCurrencyString: typeof import('@teranes/vue-composables')['toCurrencyString']
  const useToKebabCase: typeof import('@teranes/vue-composables')['toKebabCase']
  const useToNumber: typeof import('@teranes/vue-composables')['toNumber']
  const useToNumberWithCommas: typeof import('@teranes/vue-composables')['toNumberWithCommas']
  const useToNumericString: typeof import('@teranes/vue-composables')['toNumericString']
  const useToPascalCase: typeof import('@teranes/vue-composables')['toPascalCase']
  const useToPlural: typeof import('@teranes/vue-composables')['toPlural']
  const useToSingular: typeof import('@teranes/vue-composables')['toSingular']
  const useToSnakeCase: typeof import('@teranes/vue-composables')['toSnakeCase']
  const useVModel: typeof import('@teranes/vue-composables')['vModel']
  const useWatchOnce: typeof import('@teranes/vue-composables')['watchOnce']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { FilterAndPaginateOptions, BlobDownloadOptions, ComponentToHtmlOptions, ComponentToImageOptions, DateObject, DateOptions, HtmlToImageOptions, ImageProperties, JsonToCsvExportOptions, PaginationLoadOptions, PaginationOptions, PdfOptions, PdfCoordinate, PdfAddComponentOptions, PdfAddHtmlOptions, PdfAddImageOptions, PdfTableHeader, PdfDrawItemOptions, PdfAddTableOptions, PdfTextOptions, PdfWatermarkOptions, Popper, PopperInput, CurrencyStringOptions, FunctionParams, ComponentEmit, ComponentExposed, ComponentProps, ComponentSlots, ComponentType, WatchOnceOptions } from '@teranes/vue-composables'
  import('@teranes/vue-composables')
}
